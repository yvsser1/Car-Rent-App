{"ast":null,"code":"export var signIn = function signIn(credentiala) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentiala.email, credentiala.password).then(function () {\n      console.log('success');\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(function (err) {\n      console.log('error');\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport var signUp = function signUp(newUser) {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase,\n        getFirestore = _ref3.getFirestore;\n    var firebase = getFirebase();\n    var firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(function (resp) {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        id: resp.user.uid,\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initial: newUser.firstName[0] + newUser.lastName[0],\n        phoneNumber: newUser.phoneNumber,\n        accountType: newUser.accountType,\n        userAddress: newUser.userAddress,\n        role: 'user'\n      });\n    }).then(function () {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/yvsser1/projects/ProjectPFE/src/store/actions/authAction.js"],"names":["signIn","credentiala","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","console","log","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","id","firstName","lastName","initial","phoneNumber","accountType","userAddress","role"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACrC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAyC;AAAA,QAAlBC,WAAkB,QAAlBA,WAAkB;AAC9C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACEN,WAAW,CAACO,KADd,EAEEP,WAAW,CAACQ,QAFd,EAGEC,IAHF,CAGO,YAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,GAAG,EAAHA;AAAvB,OAAD,CAAR;AACD,KATD;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAACd,QAAD,EAAWC,QAAX,SAAyC;AAAA,QAAlBC,WAAkB,SAAlBA,WAAkB;AAC9C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AACAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBU,OAAhB,GAA0BN,IAA1B,CAA+B,YAAM;AACnCR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GALD;AAMD,CAPM;AASP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AACjC,SAAO,UAAChB,QAAD,EAAWC,QAAX,SAAuD;AAAA,QAAhCC,WAAgC,SAAhCA,WAAgC;AAAA,QAAnBe,YAAmB,SAAnBA,YAAmB;AAC5D,QAAMd,QAAQ,GAAGD,WAAW,EAA5B;AACA,QAAMgB,SAAS,GAAGD,YAAY,EAA9B;AACAd,IAAAA,QAAQ,CAACC,IAAT,GAAgBe,8BAAhB,CACEH,OAAO,CAACV,KADV,EAEEU,OAAO,CAACT,QAFV,EAGEC,IAHF,CAGO,UAACY,IAAD,EAAU;AACf,aAAOF,SAAS,CAACG,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUC,GAA5C,EAAiDC,GAAjD,CAAqD;AAC1DC,QAAAA,EAAE,EAAEN,IAAI,CAACG,IAAL,CAAUC,GAD4C;AAE1DG,QAAAA,SAAS,EAAEX,OAAO,CAACW,SAFuC;AAG1DC,QAAAA,QAAQ,EAAEZ,OAAO,CAACY,QAHwC;AAI1DC,QAAAA,OAAO,EAAEb,OAAO,CAACW,SAAR,CAAkB,CAAlB,IAAuBX,OAAO,CAACY,QAAR,CAAiB,CAAjB,CAJ0B;AAK1DE,QAAAA,WAAW,EAAEd,OAAO,CAACc,WALqC;AAM1DC,QAAAA,WAAW,EAAEf,OAAO,CAACe,WANqC;AAO1DC,QAAAA,WAAW,EAAEhB,OAAO,CAACgB,WAPqC;AAQ1DC,QAAAA,IAAI,EAAE;AARoD,OAArD,CAAP;AAUD,KAdD,EAcGzB,IAdH,CAcQ,YAAM;AACZR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAhBD,EAgBGC,KAhBH,CAgBS,UAAAC,GAAG,EAAI;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,GAAG,EAAHA;AAAxB,OAAD,CAAR;AACD,KAlBD;AAmBD,GAtBD;AAuBD,CAxBM","sourcesContent":["export const signIn = (credentiala) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentiala.email,\r\n      credentiala.password\r\n    ).then(() => {\r\n      console.log('success')\r\n      dispatch({ type: 'LOGIN_SUCCESS' })\r\n    }).catch((err) => {\r\n      console.log('error')\r\n      dispatch({ type: 'LOGIN_ERROR', err })\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    })\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase()\r\n    const firestore = getFirestore()\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        id: resp.user.uid,\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initial: newUser.firstName[0] + newUser.lastName[0],\r\n        phoneNumber: newUser.phoneNumber,\r\n        accountType: newUser.accountType,\r\n        userAddress: newUser.userAddress,\r\n        role: 'user'\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch(err => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err })\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export { default as ParseError } from '../es6/ParseError'; // `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\n\nexport { default as parsePhoneNumberWithError, default as parsePhoneNumber } from '../es6/parsePhoneNumber'; // `parsePhoneNumberFromString()` named export is now considered legacy:\n// it has been promoted to a default export due to being too verbose.\n\nexport { default, default as parsePhoneNumberFromString } from '../es6/parsePhoneNumberFromString';\nexport { default as isValidPhoneNumber } from '../es6/isValidPhoneNumber';\nexport { default as isPossiblePhoneNumber } from '../es6/isPossiblePhoneNumber'; // Deprecated.\n\nexport { default as findNumbers } from '../es6/findNumbers'; // Deprecated.\n\nexport { default as searchNumbers } from '../es6/searchNumbers';\nexport { default as findPhoneNumbersInText } from '../es6/findPhoneNumbersInText';\nexport { default as searchPhoneNumbersInText } from '../es6/searchPhoneNumbersInText';\nexport { default as PhoneNumberMatcher } from '../es6/PhoneNumberMatcher';\nexport { default as AsYouType } from '../es6/AsYouType';\nexport { DIGIT_PLACEHOLDER } from '../es6/AsYouTypeFormatter';\nexport { default as getCountries } from '../es6/getCountries';\nexport { default as Metadata, isSupportedCountry, getCountryCallingCode, getExtPrefix } from '../es6/metadata';\nexport { default as getExampleNumber } from '../es6/getExampleNumber';\nexport { default as formatIncompletePhoneNumber } from '../es6/formatIncompletePhoneNumber';\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from '../es6/parseIncompletePhoneNumber';\nexport { default as parseDigits } from '../es6/helpers/parseDigits';\nexport { parseRFC3966, formatRFC3966 } from '../es6/helpers/RFC3966';","map":null,"metadata":{},"sourceType":"module"}
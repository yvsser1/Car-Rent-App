{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Input;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _mergeClassNames = _interopRequireDefault(require(\"merge-class-names\"));\n\nvar _updateInputWidth = _interopRequireWildcard(require(\"update-input-width\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* eslint-disable jsx-a11y/no-autofocus */\n\n\nfunction onFocus(event) {\n  var target = event.target;\n  requestAnimationFrame(function () {\n    return target.select();\n  });\n}\n\nfunction updateInputWidthOnFontLoad(element) {\n  if (!document.fonts) {\n    return;\n  }\n\n  var font = (0, _updateInputWidth.getFontShorthand)(element);\n\n  if (!font) {\n    return;\n  }\n\n  var isFontLoaded = document.fonts.check(font);\n\n  if (isFontLoaded) {\n    return;\n  }\n\n  function onLoadingDone() {\n    (0, _updateInputWidth[\"default\"])(element);\n  }\n\n  document.fonts.addEventListener('loadingdone', onLoadingDone);\n}\n\nfunction getSelectionString() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return window.getSelection().toString();\n}\n\nfunction makeOnKeyPress(maxLength) {\n  return function onKeyPress(event) {\n    var value = event.target.value;\n    var selection = getSelectionString();\n\n    if (selection || value.length < maxLength) {\n      return;\n    }\n\n    event.preventDefault();\n  };\n}\n\nfunction Input(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      autoFocus = _ref.autoFocus,\n      className = _ref.className,\n      disabled = _ref.disabled,\n      itemRef = _ref.itemRef,\n      max = _ref.max,\n      min = _ref.min,\n      name = _ref.name,\n      nameForClass = _ref.nameForClass,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      _onKeyUp = _ref.onKeyUp,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? '--' : _ref$placeholder,\n      required = _ref.required,\n      showLeadingZeros = _ref.showLeadingZeros,\n      step = _ref.step,\n      value = _ref.value;\n  var hasLeadingZero = showLeadingZeros && value !== null && value < 10;\n  var maxLength = max.toString().length;\n  return [hasLeadingZero && _react[\"default\"].createElement(\"span\", {\n    key: \"leadingZero\",\n    className: \"\".concat(className, \"__leadingZero\")\n  }, \"0\"), _react[\"default\"].createElement(\"input\", {\n    key: \"input\",\n    \"aria-label\": ariaLabel,\n    autoComplete: \"off\",\n    autoFocus: autoFocus,\n    className: (0, _mergeClassNames[\"default\"])(\"\".concat(className, \"__input\"), \"\".concat(className, \"__\").concat(nameForClass || name), hasLeadingZero && \"\".concat(className, \"__input--hasLeadingZero\")),\n    disabled: disabled,\n    max: max,\n    min: min,\n    name: name,\n    onChange: onChange,\n    onFocus: onFocus,\n    onKeyDown: onKeyDown,\n    onKeyPress: makeOnKeyPress(maxLength),\n    onKeyUp: function onKeyUp(event) {\n      (0, _updateInputWidth[\"default\"])(event.target);\n\n      if (_onKeyUp) {\n        _onKeyUp(event);\n      }\n    },\n    placeholder: placeholder,\n    ref: function ref(_ref2) {\n      if (_ref2) {\n        (0, _updateInputWidth[\"default\"])(_ref2);\n        updateInputWidthOnFontLoad(_ref2);\n      }\n\n      if (itemRef) {\n        itemRef(_ref2, name);\n      }\n    },\n    required: required,\n    step: step,\n    type: \"number\",\n    value: value !== null ? value : ''\n  })];\n}\n\nInput.propTypes = {\n  ariaLabel: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string.isRequired,\n  disabled: _propTypes[\"default\"].bool,\n  itemRef: _propTypes[\"default\"].func,\n  max: _propTypes[\"default\"].number,\n  min: _propTypes[\"default\"].number,\n  onChange: _propTypes[\"default\"].func,\n  onKeyDown: _propTypes[\"default\"].func,\n  required: _propTypes[\"default\"].bool,\n  showLeadingZeros: _propTypes[\"default\"].bool,\n  step: _propTypes[\"default\"].number,\n  value: _propTypes[\"default\"].number\n};","map":null,"metadata":{},"sourceType":"script"}
{"version":3,"sources":["../source/PageAndMenu.js"],"names":["Context","PageAndMenu","toggleMenu","show","menu","toggle","_onDidShowMenu","isShown","setState","menuIsExpanded","focus","menuButton","element","registerMenu","Error","undefined","registerMenuButton","setTogglerCooldown","setCooldown","getTogglerNode","state","props"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,IAAMA,4BAAU,mCAAhB;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEqBC,W;;;AACpB,wBAAc;AAAA;;AAEb;AACA;AAHa;;AAAA,QAyBdC,UAzBc,GAyBD,UAACC,IAAD,EAAU;AACtB,SAAKC,IAAL,CAAUC,MAAV,CAAiBF,IAAjB,EAAuB,YAAM;AAC5B,UAAKG,cAAL,CAAoB,MAAKF,IAAL,CAAUG,OAAV,EAApB;AACA,IAFD;AAGA,GA7Ba;;AAAA,QA+BdD,cA/Bc,GA+BG,UAACC,OAAD,EAAa;AAC7B,SAAKC,QAAL,CAAc;AACbC,oBAAgBF;AADH,IAAd;AAGA;AACA;AACA,OAAIA,OAAJ,EAAa;AACZ,QAAMH,OAAO,MAAKA,IAAL,CAAUA,IAAV,EAAb;AACA;AACA;AACA,QAAIA,QAAQA,KAAKM,KAAjB,EAAwB;AACvBN,UAAKM,KAAL;AACA;AACD,IAPD,MAOO;AACN;AACA,QAAI,MAAKC,UAAT,EAAqB;AACpB,WAAKA,UAAL,CAAgBC,OAAhB,GAA0BF,KAA1B;AACA;AACD;AACD,GAlDa;;AAAA,QAoDdG,YApDc,GAoDC,UAACT,IAAD,EAAU;AACxB,OAAI,MAAKA,IAAT,EAAe;AACd,UAAM,IAAIU,KAAJ,CAAU,yEAAV,CAAN;AACA;AACD,SAAKV,IAAL,GAAYA,IAAZ;AACA;AACA,UAAO,YAAM;AACZ,UAAKA,IAAL,GAAYW,SAAZ;AACA,UAAKT,cAAL,CAAoB,KAApB;AACA,IAHD;AAIA,GA9Da;;AAAA,QAgEdU,kBAhEc,GAgEO,UAACL,UAAD,EAAgB;AACpC,OAAI,MAAKA,UAAT,EAAqB;AACpB,UAAM,IAAIG,KAAJ,CAAU,gFAAV,CAAN;AACA;AACD,SAAKH,UAAL,GAAkBA,UAAlB;AACA;AACA,UAAO,YAAM;AACZ,UAAKA,UAAL,GAAkBI,SAAlB;AACA,IAFD;AAGA,GAzEa;;AAAA,QA2EdE,kBA3Ec,GA2EO;AAAA,UAAM,MAAKN,UAAL,CAAgBO,WAAhB,EAAN;AAAA,GA3EP;;AAAA,QA4EdC,cA5Ec,GA4EG;AAAA,UAAM,MAAKR,UAAL,CAAgBC,OAAhB,EAAN;AAAA,GA5EH;;AAIb,QAAKQ,KAAL,GAAa;AACZ;AACA;AACA;AACAX,mBAAqBM,SAJT,EAIoB;AAChCb,eAAqB,MAAKA,UALd;AAMZW,iBAAqB,MAAKA,YANd;AAOZG,uBAAqB,MAAKA,kBAPd;AAQZC,uBAAqB,MAAKA,kBARd;AASZE,mBAAqB,MAAKA;AATd,GAAb;AAJa;AAeb;;;;2BAEQ;AACR,UACC;AAAC,WAAD,CAAS,QAAT;AAAA,MAAkB,OAAO,KAAKC,KAA9B;AACC,yCAAS,KAAKC,KAAd;AADD,IADD;AAKA;;;;;;kBAxBmBpB,W","file":"PageAndMenu.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport createContext from 'create-react-context'\r\n\r\nexport const Context = createContext()\r\n\r\n// export const contextPropTypes = {\r\n// \tmenuIsExpanded     : PropTypes.bool.isRequired,\r\n// \ttoggleMenu         : PropTypes.func.isRequired,\r\n// \tregisterMenu       : PropTypes.func.isRequired,\r\n// \tregisterMenuButton : PropTypes.func.isRequired,\r\n// \tsetTogglerCooldown : PropTypes.func.isRequired,\r\n// \tgetTogglerNode     : PropTypes.func.isRequired\r\n// }\r\n\r\nexport default class PageAndMenu extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\t// `state` is placed here to so that it's initialized\r\n\t\t// after all instance methods because it references them.\r\n\t\tthis.state = {\r\n\t\t\t// Using `undefined` for `menuIsExpanded` instead of `false`\r\n\t\t\t// because menu icon uses it to determine whether\r\n\t\t\t// the button has been activated yet.\r\n\t\t\tmenuIsExpanded     : undefined, // false,\r\n\t\t\ttoggleMenu         : this.toggleMenu,\r\n\t\t\tregisterMenu       : this.registerMenu,\r\n\t\t\tregisterMenuButton : this.registerMenuButton,\r\n\t\t\tsetTogglerCooldown : this.setTogglerCooldown,\r\n\t\t\tgetTogglerNode     : this.getTogglerNode\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t<div {...this.props}/>\r\n\t\t\t</Context.Provider>\r\n\t\t)\r\n\t}\r\n\r\n\ttoggleMenu = (show) => {\r\n\t\tthis.menu.toggle(show, () => {\r\n\t\t\tthis._onDidShowMenu(this.menu.isShown())\r\n\t\t})\r\n\t}\r\n\r\n\t_onDidShowMenu = (isShown) => {\r\n\t\tthis.setState({\r\n\t\t\tmenuIsExpanded: isShown\r\n\t\t})\r\n\t\t// Focus the menu when it's expanded.\r\n\t\t// Focus the menu button when menu is collapsed.\r\n\t\tif (isShown) {\r\n\t\t\tconst menu = this.menu.menu()\r\n\t\t\t// If the menu element supports focus.\r\n\t\t\t// (for example, via `tabIndex={-1}`).\r\n\t\t\tif (menu && menu.focus) {\r\n\t\t\t\tmenu.focus()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The menu button might get unmounted when the menu is unmounted.\r\n\t\t\tif (this.menuButton) {\r\n\t\t\t\tthis.menuButton.element().focus()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tregisterMenu = (menu) => {\r\n\t\tif (this.menu) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu registered for this page.')\r\n\t\t}\r\n\t\tthis.menu = menu\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => {\r\n\t\t\tthis.menu = undefined\r\n\t\t\tthis._onDidShowMenu(false)\r\n\t\t}\r\n\t}\r\n\r\n\tregisterMenuButton = (menuButton) => {\r\n\t\tif (this.menuButton) {\r\n\t\t\tthrow new Error('[react-responsive-ui] There already is a menu button registered for this page.')\r\n\t\t}\r\n\t\tthis.menuButton = menuButton\r\n\t\t// Return `.unregister()`.\r\n\t\treturn () => {\r\n\t\t\tthis.menuButton = undefined\r\n\t\t}\r\n\t}\r\n\r\n\tsetTogglerCooldown = () => this.menuButton.setCooldown()\r\n\tgetTogglerNode = () => this.menuButton.element()\r\n}"]}
{"version":3,"sources":["../source/Snackbar.js"],"names":["PureComponent","Component","Snackbar","state","snackbar","status","queue","next","value","shift","setState","queueSize","length","height","undefined","hiding","hide","hideAnimationDuration","props","show","show_next_snack_timeout","auto_hide_timer","show_snack_timeout","prevProps","push","newValue","minTime","lengthTimeFactor","duration","content","window","rruiCollapseOnFocusOut","prevState","receiveNewValue","current","offsetHeight","marginBottom","parseInt","getComputedStyle","anti_lag_timeout","scheduleAutoHide","type","style","transform","transition","showCloseButton","close","component","createElement","action","onClick","title","propTypes","shape","oneOfType","string","node","func","object","number","isRequired","bool","defaultProps","Close"],"mappings":"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","file":"Snackbar.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport createRef from 'react-create-ref'\r\n\r\n// For some weird reason, in Chrome, `setTimeout()` would lag up to a second (or more) behind.\r\n// Turns out, Chrome developers have deprecated `setTimeout()` API entirely without asking anyone.\r\n// Replacing `setTimeout()` with `requestAnimationFrame()` can work around that Chrome bug.\r\n// https://github.com/bvaughn/react-virtualized/issues/722\r\nimport { setTimeout, clearTimeout } from 'request-animation-frame-timeout'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\n// Sits at the bottom of a page and displays notifications\r\nexport default class Snackbar extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Snackbar value (either a message, or an object)\r\n\t\tvalue : PropTypes.shape\r\n\t\t({\r\n\t\t\t// Notification content.\r\n\t\t\tcontent : PropTypes.oneOfType\r\n\t\t\t([\r\n\t\t\t\tPropTypes.string,\r\n\t\t\t\tPropTypes.node\r\n\t\t\t]),\r\n\r\n\t\t\t// Instead of `content` property one may supply `component` property\r\n\t\t\t// which must be a React component which receives all \"rest\" `value` properties\r\n\t\t\t// and also `hide`property (a function that hides the notification).\r\n\t\t\tcomponent : PropTypes.func,\r\n\r\n\t\t\t// `props` are passed to `component`.\r\n\t\t\tprops : PropTypes.object,\r\n\r\n\t\t\t// If `content` is a `string` then its `length` is calculated automatically.\r\n\t\t\t// Otherwise one may pass `length` manually.\r\n\t\t\t// It's used for calculating notification `duration`.\r\n\t\t\tlength : PropTypes.number,\r\n\r\n\t\t\t// `type` is appended as a BEM modifier to `.rrui__snackbar` CSS class.\r\n\t\t\t// E.g. `.rrui__snackbar--error` for `{ type: \"error\" }`.\r\n\t\t\ttype : PropTypes.string,\r\n\r\n\t\t\t// How long does the notification stay.\r\n\t\t\t// Pass `-1` for it to stay until it's closed manually.\r\n\t\t\tduration : PropTypes.number,\r\n\r\n\t\t\t// (optional)\r\n\t\t\t// Action button on the right side.\r\n\t\t\taction: PropTypes.shape({\r\n\t\t\t\tonClick: PropTypes.func.isRequired,\r\n\t\t\t\ttitle: PropTypes.string.isRequired\r\n\t\t\t}),\r\n\r\n\t\t\t// (optional)\r\n\t\t\t// Set to `true` to show a close button.\r\n\t\t\t// Close button is automatically shown\r\n\t\t\t// when `content` is text and `duration` is `-1`.\r\n\t\t\tclose: PropTypes.bool\r\n\t\t}),\r\n\r\n\t\t// // \"Snack\" showing CSS animation duration.\r\n\t\t// // Is 225 milliseconds by default.\r\n\t\t// showAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\t// \"Snack\" hiding CSS animation duration.\r\n\t\t// Is 195 milliseconds by default.\r\n\t\thideAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tminTime          : PropTypes.number.isRequired,\r\n\t\tlengthTimeFactor : PropTypes.number.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// showAnimationDuration : 225,\r\n\t\thideAnimationDuration : 195,\r\n\t\tminTime : 1200,\r\n\t\tlengthTimeFactor : 60\r\n\t}\r\n\r\n\tstate = {}\r\n\r\n\tsnackbar = createRef()\r\n\r\n\tstatus = 'idle'\r\n\tqueue = []\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tclearTimeout(this.auto_hide_timer)\r\n\t\tclearTimeout(this.show_next_snack_timeout)\r\n\t\tclearTimeout(this.show_snack_timeout)\r\n\t}\r\n\r\n\treceiveNewValue(prevProps)\r\n\t{\r\n\t\tconst { value } = this.props\r\n\r\n\t\t// If `value` has changed then push it to the queue.\r\n\t\tif (value && value !== prevProps.value)\r\n\t\t{\r\n\t\t\t// Add the notification to the queue\r\n\t\t\tthis.push(value)\r\n\t\t}\r\n\t}\r\n\r\n\t// Adds a notification to the queue\r\n\tpush(newValue)\r\n\t{\r\n\t\t// Add the notification to the queue\r\n\t\tthis.queue.push(newValue)\r\n\t\tthis.setState({\r\n\t\t\tqueueSize: this.queue.length\r\n\t\t})\r\n\t\t// If the notification queue was empty\r\n\t\t// then kick-start it.\r\n\t\tif (this.status === 'idle') {\r\n\t\t\tthis.next()\r\n\t\t}\r\n\t}\r\n\r\n\t// Displays the next notification in the queue\r\n\tnext = () => {\r\n\t\t// Get the next notification from the queue\r\n\t\t// (will be `undefined` if the queue is empty)\r\n\t\tconst value = this.queue.shift()\r\n\r\n\t\t// Reset the notification display\r\n\t\tthis.setState({\r\n\t\t\tvalue,\r\n\t\t\tqueueSize: this.queue.length,\r\n\t\t\theight: undefined,\r\n\t\t\t// wide: undefined,\r\n\t\t\thiding: false\r\n\t\t})\r\n\r\n\t\tif (value) {\r\n\t\t\tthis.status = 'active'\r\n\t\t\t// `state.show` will be set to `true` later,\r\n\t\t\t// when the height of the element is measured\r\n\t\t\t// (which is after it renders)\r\n\t\t} else {\r\n\t\t\t// If the queue is empty, then just exit\r\n\t\t\tthis.status = 'idle'\r\n\t\t}\r\n\t}\r\n\r\n\tscheduleAutoHide() {\r\n\t\tconst { minTime, lengthTimeFactor } = this.props\r\n\t\tconst { value } = this.state\r\n\t\tif (value.duration === -1) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tconst length = typeof value.content === 'string' ? value.content.length : value.length || 0\r\n\t\tconst duration = value.duration || (minTime + length * lengthTimeFactor)\r\n\t\t// Hide the notification after it expires.\r\n\t\tif (window.rruiCollapseOnFocusOut !== false) {\r\n\t\t\tthis.auto_hide_timer = setTimeout(this.hide, duration)\r\n\t\t}\r\n\t}\r\n\r\n\thide = () =>\r\n\t{\r\n\t\tconst { hideAnimationDuration } = this.props\r\n\r\n\t\t// Start the hiding animation for the notification\r\n\t\tthis.setState({ show: false, hiding: true })\r\n\r\n\t\t// Display the next notification\r\n\t\t// after the currently being hidden one\r\n\t\t// finishes its hiding animation.\r\n\t\tthis.show_next_snack_timeout = setTimeout(this.next, hideAnimationDuration)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tlet { height, value } = this.state\r\n\t\tconst { show } = this.state\r\n\r\n\t\t// If `value` got updated then push it to the list of `queue`.\r\n\t\tthis.receiveNewValue(prevProps)\r\n\r\n\t\t// The notification DOM element has just been rendered\r\n\t\t// which means its dimensions are set by now.\r\n\t\t// Calculate the notification container DOM element height\r\n\t\t// so that the slide-from-bottom animation knows\r\n\t\t// its target Y-position for the CSS `translate` transform.\r\n\t\tif (value) {\r\n\t\t\tif (height === undefined) {\r\n\t\t\t\theight = this.snackbar.current.offsetHeight\r\n\t\t\t\t// const wide = this.snackbar.current.offsetWidth === document.documentElement.clientWidth\r\n\t\t\t\tconst marginBottom = parseInt(getComputedStyle(this.snackbar.current).marginBottom)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\theight,\r\n\t\t\t\t\t// wide,\r\n\t\t\t\t\tmarginBottom\r\n\t\t\t\t})\r\n\t\t\t} else if (prevState.height === undefined) {\r\n\t\t\t\t// An \"anti-lag\" timeout added in order to set `show: true`\r\n\t\t\t\t// after the web browser has re-rendered.\r\n\t\t\t\t// Otherwise it would jump to fully shown in Chrome when\r\n\t\t\t\t// there's a queue of snacks waiting to be shown\r\n\t\t\t\tconst anti_lag_timeout = 100\r\n\t\t\t\t// Handle the changed state (due to the `.setState()` call above).\r\n\t\t\t\tthis.show_snack_timeout = setTimeout(() => {\r\n\t\t\t\t\t// Sometimes (for example, when the browser tab was in background)\r\n\t\t\t\t\t// this timer hasn't fired until the timeout\r\n\t\t\t\t\tthis.setState({ show: true })\r\n\t\t\t\t}, anti_lag_timeout)\r\n\t\t\t} else if (!prevState.show && show) {\r\n\t\t\t\tthis.scheduleAutoHide()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst {\r\n\t\t\ttype\r\n\t\t} = this.props\r\n\r\n\t\tconst {\r\n\t\t\tshow,\r\n\t\t\tvalue,\r\n\t\t\theight,\r\n\t\t\t// wide,\r\n\t\t\tmarginBottom,\r\n\t\t\thiding,\r\n\t\t\tqueueSize\r\n\t\t} = this.state\r\n\r\n\t\tconst style = {}\r\n\r\n\t\tif (!show) {\r\n\t\t\t// If no snack is being shown,\r\n\t\t\t// or if a snack is about to be shown,\r\n\t\t\t// then shift it under the screen's bottom border\r\n\t\t\t// to show the slide-from-bottom animation at the next step.\r\n\t\t\tif (height !== undefined) {\r\n\t\t\t\tstyle.transform = `translateY(${height + marginBottom}px)`\r\n\t\t\t}\r\n\t\t\tif (!hiding) {\r\n\t\t\t\tstyle.transition = 'none'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst showCloseButton = value && (value.close || (typeof value.content === 'string' && value.duration === -1))\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={this.snackbar}\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tclassName={classNames(\r\n\t\t\t\t\t'rrui__snackbar',\r\n\t\t\t\t\tvalue && value.type && `rrui__snackbar--${value.type}`, {\r\n\t\t\t\t\t\t'rrui__snackbar--hidden': !show\r\n\t\t\t\t\t}\r\n\t\t\t\t)}>\r\n\r\n\t\t\t\t{/* Render the default content component. */}\r\n\t\t\t\t{value && !value.component &&\r\n\t\t\t\t\t<p className=\"rrui__snackbar__text\">\r\n\t\t\t\t\t\t{value.content}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{/* Render a custom content component. */}\r\n\t\t\t\t{value && value.component &&\r\n\t\t\t\t\tReact.createElement(value.component, {\r\n\t\t\t\t\t\t...value.props,\r\n\t\t\t\t\t\thide: this.hide\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{(value && value.action || showCloseButton) &&\r\n\t\t\t\t\t<div className=\"rrui__snackbar__actions\">\r\n\t\t\t\t\t\t{value && value.action &&\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={value.action.onClick}\r\n\t\t\t\t\t\t\t\tclass=\"rrui__snackbar__action rrui__button-reset\">\r\n\t\t\t\t\t\t\t\t{value.action.title}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{showCloseButton &&\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tonClick={this.hide}\r\n\t\t\t\t\t\t\t\tclassName=\"rrui__snackbar__close rrui__button-reset\">\r\n\t\t\t\t\t\t\t\t<Close/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{/* value && value.duration === -1 && */}\r\n\t\t\t\t{queueSize > 0 &&\r\n\t\t\t\t\t<div className=\"rrui__snackbar__count\">\r\n\t\t\t\t\t\t{queueSize + 1}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction Close() {\r\n\treturn (\r\n\t\t<svg className=\"rrui__snackbar__close-icon\" viewBox=\"0 0 100 100\">\r\n\t\t\t<line stroke=\"currentColor\" strokeWidth=\"10\" x1=\"2\" y1=\"2\" x2=\"98\" y2=\"98\"/>\r\n\t\t\t<line stroke=\"currentColor\" strokeWidth=\"10\" x1=\"2\" y1=\"98\" x2=\"98\" y2=\"2\"/>\r\n\t\t</svg>\r\n\t)\r\n}"]}
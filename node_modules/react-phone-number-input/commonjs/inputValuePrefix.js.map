{"version":3,"sources":["../source/inputValuePrefix.js"],"names":["getInputValuePrefix","removeInputValuePrefix","country","international","metadata","value","prefix","slice","length"],"mappings":";;;;;QAEgBA,mB,GAAAA,mB;QAMAC,sB,GAAAA,sB;;AARhB;;AAEO,SAASD,mBAAT,CAA6BE,OAA7B,EAAsCC,aAAtC,EAAqDC,QAArD,EAA+D;AACrE,QAAOF,WAAWC,aAAX,SACF,iCAAsBD,OAAtB,EAA+BE,QAA/B,CADE,GAEN,EAFD;AAGA;;AAEM,SAASH,sBAAT,CAAgCI,KAAhC,EAAuCC,MAAvC,EAA+C;AACrD,KAAIA,MAAJ,EAAY;AACXD,UAAQA,MAAME,KAAN,CAAYD,OAAOE,MAAnB,CAAR;AACA,MAAIH,MAAM,CAAN,MAAa,GAAjB,EAAsB;AACrBA,WAAQA,MAAME,KAAN,CAAY,CAAZ,CAAR;AACA;AACD;AACD,QAAOF,KAAP;AACA","file":"inputValuePrefix.js","sourcesContent":["import { getCountryCallingCode } from 'libphonenumber-js/core'\r\n\r\nexport function getInputValuePrefix(country, international, metadata) {\r\n\treturn country && international ?\r\n\t\t`+${getCountryCallingCode(country, metadata)}` :\r\n\t\t''\r\n}\r\n\r\nexport function removeInputValuePrefix(value, prefix) {\r\n\tif (prefix) {\r\n\t\tvalue = value.slice(prefix.length)\r\n\t\tif (value[0] === ' ') {\r\n\t\t\tvalue = value.slice(1)\r\n\t\t}\r\n\t}\r\n\treturn value\r\n}"]}